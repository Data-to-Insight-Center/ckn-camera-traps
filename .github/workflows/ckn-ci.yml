name: CKN-CI

on: [push]

jobs:
  start:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Build CKN
        run: |
          docker network create ckn-network || true
          docker compose -f docker-compose.yml up -d --build

      - name: Apply neo4j Constraints
        run: |
          echo "Waiting for Neo4j to be ready..."
          while ! docker exec neo4j_server cypher-shell -u neo4j -p PWD_HERE "RETURN 1" > /dev/null 2>&1; do \
            echo "neo4j-server starting..."; \
            sleep 5; \
          done
          echo "Neo4j is ready"

          docker cp ckn_kg/constraints.cypher neo4j_server:/constraints.cypher
          docker exec neo4j_server cypher-shell -u neo4j -p PWD_HERE -f /constraints.cypher
              
      - name: Build CKN Oracle Daemon plugin
        run: |
          docker compose -f plugins/oracle_ckn_daemon/docker-compose.yml up -d --build
          docker logs kafka-connect
          sleep 5
          docker exec ckn-oracle-daemon touch /oracle_logs/image_mapping_final.json
          docker exec ckn-oracle-daemon tail -f /oracle_logs/ckn.log

      - name: Test Oracle CKN Plugin
        run: |
          pip install -r plugins/oracle_ckn_daemon/tests/requirements.txt
          pytest plugins/oracle_ckn_daemon/tests -v

      - name: Test CKN
        run: |
          pip install neo4j
          python -m unittest discover -s tests -p "*.py"

      - name: Stop and Remove CKN Docker Network
        if: always()
        run: |
          docker compose -f docker-compose.yml down
          docker network rm ckn-network || true

      - name: Remove Oracle Daemon Container
        if: always()
        run: |
          docker compose -f examples/docker-compose.yml down