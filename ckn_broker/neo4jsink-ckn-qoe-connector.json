{
  "name": "Neo4jSinkConnectorCKN",
  "config": {
    "topics": "ckn-qoe",
    "connector.class": "streams.kafka.connect.sink.Neo4jSinkConnector",
    "errors.retry.timeout": "-1",
    "errors.retry.delay.max.ms": "1000",
    "errors.tolerance": "all",
    "errors.log.enable": true,
    "errors.log.include.messages": true,
    "key.converter": "org.apache.kafka.connect.storage.StringConverter",
    "key.converter.schemas.enable": false,
    "value.converter": "org.apache.kafka.connect.json.JsonConverter",
    "value.converter.schemas.enable": false,
    "neo4j.server.uri": "bolt://neo4j:7687",
    "neo4j.authentication.basic.username": "neo4j",
    "neo4j.authentication.basic.password": "PWD_HERE",
    "neo4j.topic.cypher.ckn-qoe": "
      MERGE (server:Server {server_id: event.server_id})
      MERGE (application:Application {service_id: event.service_id})
      MERGE (device:Device {client_id: event.client_id})
      MERGE (model:Model {model_id: event.model})
      MERGE (deployment:Deployment {
        accuracy: event.accuracy,
        compute_time: event.compute_time,
        total_qoe: event.total_qoe,
        accuracy_qoe: event.accuracy_qoe,
        delay_qoe: event.delay_qoe,
        cpu_power: event.cpu_power,
        start_time: event.start_time,
        end_time: event.end_time
      })
      ON CREATE SET
        deployment.ground_truth = event.ground_truth,
        deployment.prediction = event.prediction,
        deployment.probability = event.probability
      MERGE (model)-[r1:MODEL_OF]->(application)
      MERGE (model)-[r2:USED_IN]->(deployment)
      MERGE (deployment)-[r3:DEPLOYED_IN]->(server)
      MERGE (device)-[r4:REQUESTED_TO]->(server)
    "
  }
}