name: CKN-CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    - name: Create Docker Network
      run: |
        docker network create ckn-network || true

    - name: Start Docker Compose
      run: |
        docker-compose up -d

    - name: Apply Neo4j Constraints
      run: |
        echo "Waiting for Neo4j to be ready..."
        while ! docker exec neo4j_server cypher-shell -u neo4j -p PWD_HERE "RETURN 1" > /dev/null 2>&1; do \
          echo "neo4j-server starting..."; \
          sleep 5; \
        done
        echo "Neo4j is ready"

        docker cp ckn_kg/constraints.cypher neo4j_server:/constraints.cypher
        docker exec neo4j_server cypher-shell -u neo4j -p PWD_HERE -f /constraints.cypher

    - name: Test CKN
      env:
        NEO4J_URI: bolt://localhost:7687
        NEO4J_USER: neo4j
        NEO4J_PWD: PWD_HERE
      run: |
        python -m pip install --upgrade pip
        pip install neo4j
        python -m unittest discover -s tests -p "*.py"

    - name: Run Plugin Docker Compose
      run: |
        cd plugins/oracle_ckn_daemon
        docker-compose up -d
  
    - name: Produce Plugin Events
      run: |
        cd plugins/oracle_ckn_daemon/events
        touch image_mapping_final.json

    - name: Test Plugin
      run: |
        sleep 10
        pip install -r plugins/oracle_ckn_daemon/requirements.txt
        python -m unittest discover -s plugins/oracle_ckn_daemon/tests -p "*.py"

    - name: Stop and Remove Docker Network
      if: always()
      run: |
        docker-compose down
        docker network rm ckn-network || true
