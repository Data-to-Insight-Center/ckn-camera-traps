{
  "name": "Neo4jAggregationSinkConnectorCKN",
  "config": {
    "topics": "ckn-qoe-agg",
    "connector.class": "streams.kafka.connect.sink.Neo4jSinkConnector",
    "errors.retry.timeout": "-1",
    "errors.retry.delay.max.ms": "1000",
    "errors.tolerance": "all",
    "errors.log.enable": true,
    "errors.log.include.messages": true,
    "key.converter": "org.apache.kafka.connect.storage.StringConverter",
    "key.converter.schemas.enable": false,
    "value.converter": "org.apache.kafka.connect.json.JsonConverter",
    "value.converter.schemas.enable": false,
    "neo4j.server.uri": "bolt://neo4j:7687",
    "neo4j.authentication.basic.username": "neo4j",
    "neo4j.authentication.basic.password": "PWD_HERE",
    "neo4j.topic.cypher.ckn-qoe-agg": "
      MATCH (model:Model)-[:USED_IN]->(deployment:Deployment)-[:DEPLOYED_IN]->(server:Server)
      WITH model, server,
           SUM(deployment.accuracy) AS total_accuracy,
           SUM(deployment.compute_time) AS total_compute_time,
           SUM(deployment.total_qoe) AS total_qoe,
           SUM(deployment.accuracy_qoe) AS total_accuracy_qoe,
           SUM(deployment.delay_qoe) AS total_delay_qoe,
           SUM(deployment.cpu_power) AS total_cpu_power
      MERGE (aggregation:Aggregation {model_id: model.model_id, server_id: server.server_id})
      ON CREATE SET
        aggregation.total_accuracy = total_accuracy,
        aggregation.total_compute_time = total_compute_time,
        aggregation.total_qoe = total_qoe,
        aggregation.total_accuracy_qoe = total_accuracy_qoe,
        aggregation.total_delay_qoe = total_delay_qoe,
        aggregation.total_cpu_power = total_cpu_power
      ON MATCH SET
        aggregation.total_accuracy = total_accuracy,
        aggregation.total_compute_time = total_compute_time,
        aggregation.total_qoe = total_qoe,
        aggregation.total_accuracy_qoe = total_accuracy_qoe,
        aggregation.total_delay_qoe = total_delay_qoe,
        aggregation.total_cpu_power = total_cpu_power
      MERGE (model)-[:AGGREGATED_IN]->(aggregation)
      MERGE (aggregation)-[:AGGREGATED_FOR]->(server)
    "
  }
}
